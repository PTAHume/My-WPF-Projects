<Window x:Class="DataGrid.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DataGrid.ViewModels"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:models="clr-namespace:DataGrid.Models"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel, IsDesignTimeCreatable=False}"
        Style="{StaticResource MaterialDesignWindow}"
        Title="Demo App" 
        Height="450" 
        Width="800">
    <Grid>
        <!--d:  is design time only, used to help intelisense but dose not apply at run time-->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Menu>
            <MenuItem Header="_File">
                <MenuItem Header="New User" Command="{Binding NewUserCommand}"/>
                <MenuItem Header="E_xit" Command="{x:Static ApplicationCommands.Close}" />
            </MenuItem>
        </Menu>
        <DataGrid x:Name="MyDataGrid"  Grid.Row="1"
            ItemsSource="{Binding Users}" 
            AutoGenerateColumns="False" 
            CanUserAddRows="False"
            CanUserDeleteRows="False"
            CanUserReorderColumns="False"  
                   
            SelectionMode="Single" 
         
            AlternatingRowBackground="LightCoral"
            FrozenColumnCount="0"
           Background="Black"
            SelectionUnit="FullRow">
            <DataGrid.Resources>
                <Style x:Key="ReadonlyTextStyle" TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
                <Style x:Key="EditTextStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Red" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <!--Mode=OneWay or IsReadOnly fore get properutes with no set-->
                <DataGridTextColumn 
                   
                    Binding="{Binding Id, Mode=OneWay}"  
                    IsReadOnly="True"
                    MinWidth="150">
                    <!--<DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.CellStyle>-->
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.Header>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="IdCard"/>
                            <TextBlock Text="Id" Margin="10,0,0,0"/>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn 
                    Header="Age" 
                    Binding="{Binding Age}" 
                    MinWidth="150">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>
                <materialDesign:DataGridTextColumn 
                    Header="Name" 
                    Binding="{Binding Name}"
                    MinWidth="150"
                    MaxLength="4"
                    ElementStyle="{StaticResource ReadonlyTextStyle}"
                    EditingElementStyle="{StaticResource EditTextStyle}"
                    />
                <DataGridTemplateColumn Header="Actions">
                    <DataGridTemplateColumn.CellTemplate>
                        <!--DataType="{x:Type models:User} > datacontext subtly changes to the user object -->
                        <DataTemplate DataType="{x:Type models:User}">
                            <TextBlock Cursor="Hand"
                                     Foreground="LightBlue"
                                     Text="Edit"
                                      TextDecorations="Underline"/>
                            <!--<Button
                                    Margin="10,0"
                                    Command="{Binding DataContext.DeleteUserCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                    CommandParameter="{Binding}"
                                    Content="Delete"
                                />-->
                            
                           
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                           
                                <Button
                                    Command="{Binding DataContext.DeleteUserCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                    CommandParameter="{Binding}"
                                    Content="Edit"
                                />
                      
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.CellStyle>
                        <!--TargetType the object, ege datalist, 
                            BasedOn is so dont throw away the existing style as inheitance is not automatic in wpf
                            you have too opt in to derive from a base
                            Based style you want your style to derive from
                           Type look up the style that is the implicit type, can use a key 
                        -->
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Setter Property="Padding" Value="6"/>
                            <Style.Triggers>
                                <Trigger Property="IsEditing" Value="true">
                                    <Setter Property="Background" Value="Red"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                </DataGridTemplateColumn>
                <materialDesign:DataGridComboBoxColumn 
                    Header="Type - Reach up" 
                    ItemsSourceBinding="{Binding DataContext.UserTypes, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                    SelectedItemBinding="{Binding Type}"/>
                <materialDesign:DataGridComboBoxColumn 
                    Header="Type" 
                    ItemsSourceBinding="{Binding UserTypes}" 
                    SelectedItemBinding="{Binding Type2}"/>
            </DataGrid.Columns>
            
        </DataGrid>
    </Grid>
</Window>