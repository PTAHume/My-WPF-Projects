<Window x:Class="DataBinding.Views.AddUser"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:validation="clr-namespace:DataBinding.ValidationRules"
        xmlns:viewmodel="clr-namespace:DataBinding.ViewModel"
        d:DataContext="{d:DesignInstance Type=viewmodel:AddUserViewModel}"
        mc:Ignorable="d"
     Title="AddUser" Height="450" Width="400">
    <Grid>

        <Label Content="UserName" Margin="25" VerticalAlignment="Top" HorizontalAlignment="left" />
        <TextBox  x:Name="UserName"  TextChanged="UserName_TextChanged" Height="30" Width="200" Margin="25,50" VerticalAlignment="Top" HorizontalAlignment="left" BorderThickness="1" BorderBrush="#E0E0E0">
            <Binding Path="UserName" UpdateSourceTrigger="PropertyChanged"
                     NotifyOnValidationError="True">
                <Binding.ValidationRules>
                    <validation:UserNameValidationRule ValidatesOnTargetUpdated="True" />
                </Binding.ValidationRules>
            </Binding>
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Triggers>
                        <Trigger  Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <Label Content="* Required"  Margin="25,80,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="200">
            <Label.Resources>
                <Style TargetType="{x:Type Label}">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=UserName, Path=(Validation.HasError)}" Value="true">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Resources>
        </Label>

        <Label Content="Email" Margin="25,127,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
        <TextBox x:Name="Email"  Height="30" Width="200" Margin="25,152,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" BorderThickness="1" BorderBrush="#E0E0E0">
            <Binding TargetNullValue="" Path="Email" UpdateSourceTrigger="PropertyChanged"
             NotifyOnValidationError="True">
                <Binding.ValidationRules>
                    <validation:UserNameValidationRule ValidatesOnTargetUpdated="True" />
                </Binding.ValidationRules>
            </Binding>
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Triggers>
                        <Trigger  Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip"
                Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                Path=(Validation.Errors)/ErrorContent}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Button Height="30" Command="{Binding AddUserCommand}" x:Name="AddUserBtn" Content="Add" Width="70"  VerticalContentAlignment="Center" Padding="5" Margin="25" VerticalAlignment="Bottom" HorizontalAlignment="Right" BorderThickness="1">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="IsEnabled" Value="False" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=UserName, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding ElementName=Email, Path=(Validation.HasError)}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>